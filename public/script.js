// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
let score = 0;
let coins = 0;
let level = 1;
let xp = 0;
let multiplier = 1;
let autoClickerActive = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
Telegram.WebApp.ready();
Telegram.WebApp.expand();

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const tapCircle = document.getElementById('tap-circle');
const scoreElement = document.getElementById('score');
const coinsElement = document.getElementById('coins');
const levelElement = document.getElementById('level');
const config = {
    images: {
        1: 'images/bogdan.jpg', // –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è —É—Ä–æ–≤–Ω—è 1
        2: 'images/glebasta.jpg', // –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è —É—Ä–æ–≤–Ω—è 2
        3: 'images/lubomir.jpg', // –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è —É—Ä–æ–≤–Ω—è 3
        // –î–æ–±–∞–≤—å—Ç–µ –ø—É—Ç–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —É—Ä–æ–≤–Ω–µ–π
    },
    defaultImage: 'images/bogdan.jpg', // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
};
const tapSound = document.getElementById('tap-sound');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–∞–ø–∞
tapCircle.addEventListener('click', () => {
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
    tapSound.currentTime = 0;
    tapSound.play();
    score += multiplier;
    coins += multiplier;
    xp += multiplier;
    checkLevelUp();
    updateUI();
    saveProgress();
});

// –ú–∞–≥–∞–∑–∏–Ω
function openShop() {
    document.getElementById('shop-modal').style.display = 'block';
}

function closeShop() {
    document.getElementById('shop-modal').style.display = 'none';
}

// –ü–æ–∫—É–ø–∫–∞ —É–ª—É—á—à–µ–Ω–∏–π
function buyUpgrade(type) {
    if (type === 'multiplier' && coins >= 50) {
        coins -= 50;
        multiplier += 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å
        updateUI();
        saveProgress();
    }

    if (type === 'auto-click' && coins >= 100 && !autoClickerActive) {
        coins -= 100;
        autoClickerActive = true;
        setInterval(() => {
            score += multiplier;
            coins += multiplier;
            xp += multiplier;
            checkLevelUp();
            updateUI();
            saveProgress();
        }, 1000); // –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    }
}

// –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∫–æ—Ä–¥–æ–≤
function showLeaderboard() {
    Telegram.WebApp.showAlert("–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤:\n1. User1: 1000\n2. User2: 800");
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function saveProgress() {
    const userId = Telegram.WebApp.initDataUnsafe.user?.id || 1; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
    const gameData = { score, coins, level, xp, multiplier }; // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Å–µ—Å—Å–∏–π
    localStorage.setItem('gameData', JSON.stringify(gameData));

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å API)
    fetch('/api/save', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ userId, ...gameData }), // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    }).catch(error => console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function loadProgress() {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
    const localData = localStorage.getItem('gameData');
    if (localData) {
        try {
            const data = JSON.parse(localData);
            score = data.score || 0;
            coins = data.coins || 0;
            level = data.level || 1;
            xp = data.xp || 0;
            multiplier = data.multiplier || 1;
            updateUI();
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage:', e);
        }
    }

    // –ó–∞—Ç–µ–º –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å API)
    const userId = Telegram.WebApp.initDataUnsafe.user?.id;
    if (userId) {
        fetch(`/api/load?userId=${userId}`)
            .then(response => response.json())
            .then(data => {
                if (data) {
                    score = data.score || score;
                    coins = data.coins || coins;
                    level = data.level || level;
                    xp = data.xp || xp;
                    multiplier = data.multiplier || multiplier;
                    updateUI();
                }
            })
            .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:', error));
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateUI() {
    console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI: score=${score}, coins=${coins}, level=${level}`);
    scoreElement.textContent = score;
    coinsElement.textContent = coins;
    levelElement.textContent = level;
}

function updateImage() {
    const imagePath = config.images[level] || config.defaultImage; // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    tapImage.src = imagePath; // –û–±–Ω–æ–≤–ª—è–µ–º src –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ä–æ–≤–Ω—è
function checkLevelUp() {
    const neededXP = level * 100; // –û–ø—ã—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    if (xp >= neededXP) {
        level++;
        xp = xp - neededXP; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ XP
        coins += 10; // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã
        updateImage(); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        showLevelUpPopup();
        saveProgress();
    }
}
// –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —É—Ä–æ–≤–Ω—è
function showLevelUpPopup() {
    const popup = document.createElement('div');
    popup.className = 'level-up-popup';
    popup.innerHTML = `
        <h2>üéâ –£—Ä–æ–≤–µ–Ω—å ${level}!</h2>
        <p>+10 –º–æ–Ω–µ—Ç</p>
    `;
    document.body.appendChild(popup);
    setTimeout(() => popup.remove(), 3000); // –£–±–∏—Ä–∞–µ–º –ø–æ–ø–∞–ø —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
function shareProgress() {
    Telegram.WebApp.share({
        text: `–ú–æ–π —Å—á–µ—Ç –≤ Tap Attack: ${score}! –ü–æ–ø—Ä–æ–±—É–π –ø–æ–±–∏—Ç—å!`,
        url: window.location.href
    });
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
loadProgress();
updateImage();